# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    # branches:
    #   only:
    #     - develop # not compatible with workflows
    
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10-browsers
      # - environment: DBUS_SESSION_BUS_ADDRESS=/dev/null
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    steps:
      - checkout
      
      # - run: sudo su -c 'echo "deb http://deb.debian.org/debian jessie-backports main" >> /etc/apt/sources.list'

      # - run: |
      #     sudo rm -rf /var/lib/apt/lists/*
      #     sudo apt-get update
      #     sudo apt install -t jessie-backports openjdk-8-jre-headless ca-certificates-java

      # - run:
      #     name: Update Chromedriver
      #     command: |
      #         wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      #         sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      #         sudo apt-get update
      #         sudo apt-get -y install google-chrome-stable

      # run tests!
      # - run: npm run e2e # created a custom image where all e2e dependencies are installed

      - setup_remote_docker:   
          docker_layer_caching: true 

      # build and push Docker image
      - run: |
          TAG=latest
          docker build -t wadman/circleci-demo-fe:$TAG .
          docker login -u $DOCKER_USER -p $DOCKER_PASS         
          docker push wadman/circleci-demo-fe:$TAG
  
  deploy:
    docker: 
      - image: protocool/rancher-circleci:latest

    steps:
      - checkout
      - run: 
          rancher-compose --url $RANCHER_URL --access-key $RANCHER_ACCESS_KEY --secret-key $RANCHER_SECRET_KEY
      - run:
          rancher-compose -f technical-screening-app/docker-compose.yml -r technical-screening-app/rancher-compose up --upgrade --pull -d app-frontend

      - run:
          rancher-compose -f technical-screening-app/docker-compose.yml -r technical-screening-app/rancher-compose up --confirm-upgrade -d app-frontend
      
      - run:
          when: on_fail
          command: 
              rancher-compose -f technical-screening-app/docker-compose.yml -r technical-screening-app/rancher-compose up --rollback -d app-frontend


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
      - deploy:
          requires:
            - build